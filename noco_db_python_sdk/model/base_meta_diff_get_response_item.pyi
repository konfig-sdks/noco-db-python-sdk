# coding: utf-8

"""
    NocoDB v2

    NocoDB API Documentation

    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from noco_db_python_sdk import schemas  # noqa: F401


class BaseMetaDiffGetResponseItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            table_name = schemas.StrSchema
            source_id = schemas.StrSchema
            type = schemas.StrSchema
        
            @staticmethod
            def detectedChanges() -> typing.Type['BaseMetaDiffGetResponseItemDetectedChanges']:
                return BaseMetaDiffGetResponseItemDetectedChanges
            __annotations__ = {
                "table_name": table_name,
                "source_id": source_id,
                "type": type,
                "detectedChanges": detectedChanges,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["table_name"]) -> MetaOapg.properties.table_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["source_id"]) -> MetaOapg.properties.source_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["type"]) -> MetaOapg.properties.type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["detectedChanges"]) -> 'BaseMetaDiffGetResponseItemDetectedChanges': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["table_name", "source_id", "type", "detectedChanges", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["table_name"]) -> typing.Union[MetaOapg.properties.table_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["source_id"]) -> typing.Union[MetaOapg.properties.source_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["type"]) -> typing.Union[MetaOapg.properties.type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["detectedChanges"]) -> typing.Union['BaseMetaDiffGetResponseItemDetectedChanges', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["table_name", "source_id", "type", "detectedChanges", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        table_name: typing.Union[MetaOapg.properties.table_name, str, schemas.Unset] = schemas.unset,
        source_id: typing.Union[MetaOapg.properties.source_id, str, schemas.Unset] = schemas.unset,
        type: typing.Union[MetaOapg.properties.type, str, schemas.Unset] = schemas.unset,
        detectedChanges: typing.Union['BaseMetaDiffGetResponseItemDetectedChanges', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'BaseMetaDiffGetResponseItem':
        return super().__new__(
            cls,
            *args,
            table_name=table_name,
            source_id=source_id,
            type=type,
            detectedChanges=detectedChanges,
            _configuration=_configuration,
            **kwargs,
        )

from noco_db_python_sdk.model.base_meta_diff_get_response_item_detected_changes import BaseMetaDiffGetResponseItemDetectedChanges
