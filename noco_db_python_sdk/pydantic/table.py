# coding: utf-8

"""
    NocoDB v2

    NocoDB API Documentation

    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from noco_db_python_sdk.pydantic.column import Column
from noco_db_python_sdk.pydantic.meta import Meta
from noco_db_python_sdk.pydantic.model_bool import ModelBool
from noco_db_python_sdk.pydantic.string_or_null import StringOrNull

class Table(BaseModel):
    # Table Title
    title: str = Field(alias='title')

    # Table Name. Prefix will be added for XCDB bases.
    table_name: str = Field(alias='table_name')

    tags: typing.Optional[StringOrNull] = Field(None, alias='tags')

    # Unique Source ID
    source_id: typing.Optional[str] = Field(None, alias='source_id')

    # The columns included in this table
    columns: typing.Optional[typing.List[Column]] = Field(None, alias='columns')

    # Column Models grouped by IDs
    columns_by_id: typing.Optional[typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]] = Field(None, alias='columnsById')

    deleted: typing.Optional[ModelBool] = Field(None, alias='deleted')

    enabled: typing.Optional[ModelBool] = Field(None, alias='enabled')

    # Unique Table ID
    id: typing.Optional[str] = Field(None, alias='id')

    meta: typing.Optional[Meta] = Field(None, alias='meta')

    mm: typing.Optional[ModelBool] = Field(None, alias='mm')

    # The order of the list of tables
    order: typing.Optional[typing.Union[int, float]] = Field(None, alias='order')

    pinned: typing.Optional[ModelBool] = Field(None, alias='pinned')

    # Unique Base ID
    base_id: typing.Optional[str] = Field(None, alias='base_id')

    # Table Type
    type: typing.Optional[str] = Field(None, alias='type')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
