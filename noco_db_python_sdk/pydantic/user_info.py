# coding: utf-8

"""
    NocoDB v2

    NocoDB API Documentation

    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class UserInfo(BaseModel):
    # User Email
    email: typing.Optional[str] = Field(None, alias='email')

    # Set to true if the user's email has been verified.
    email_verified: typing.Optional[bool] = Field(None, alias='email_verified')

    # The firstname of the user
    firstname: typing.Optional[str] = Field(None, alias='firstname')

    # User ID
    id: typing.Optional[str] = Field(None, alias='id')

    # The lastname of the user
    lastname: typing.Optional[str] = Field(None, alias='lastname')

    # The roles of the user
    roles: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='roles')

    # The base roles of the user
    base_roles: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='base_roles')

    # The workspace roles of the user
    workspace_roles: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='workspace_roles')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
