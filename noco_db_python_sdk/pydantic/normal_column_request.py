# coding: utf-8

"""
    NocoDB v2

    NocoDB API Documentation

    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from noco_db_python_sdk.pydantic.model_bool import ModelBool
from noco_db_python_sdk.pydantic.string_or_null import StringOrNull
from noco_db_python_sdk.pydantic.string_or_null_or_boolean_or_number import StringOrNullOrBooleanOrNumber

class NormalColumnRequest(BaseModel):
    # Column Name
    column_name: str = Field(alias='column_name')

    # Column Title
    title: typing.Optional[str] = Field(None, alias='title')

    ai: typing.Optional[ModelBool] = Field(None, alias='ai')

    au: typing.Optional[ModelBool] = Field(None, alias='au')

    cc: typing.Optional[StringOrNull] = Field(None, alias='cc')

    cdf: typing.Optional[StringOrNullOrBooleanOrNumber] = Field(None, alias='cdf')

    csn: typing.Optional[StringOrNull] = Field(None, alias='csn')

    # Data Type
    dt: typing.Optional[str] = Field(None, alias='dt')

    dtx: typing.Optional[StringOrNull] = Field(None, alias='dtx')

    # Data Type Extra Precision
    dtxp: typing.Optional[typing.Union[str, typing.Union[int, float], none_type]] = Field(None, alias='dtxp')

    # Data Type Extra Scale
    dtxs: typing.Optional[typing.Union[StringOrNull, typing.Union[int, float]]] = Field(None, alias='dtxs')

    # Numeric Precision
    np: typing.Optional[typing.Union[StringOrNull, int]] = Field(None, alias='np')

    # Numeric Scale
    ns: typing.Optional[typing.Union[StringOrNull, int]] = Field(None, alias='ns')

    pk: typing.Optional[ModelBool] = Field(None, alias='pk')

    pv: typing.Optional[ModelBool] = Field(None, alias='pv')

    rqd: typing.Optional[ModelBool] = Field(None, alias='rqd')

    # UI Data Type
    uidt: typing.Optional[Literal["Attachment", "AutoNumber", "Barcode", "Button", "Checkbox", "Collaborator", "Count", "CreatedTime", "Currency", "Date", "DateTime", "Decimal", "Duration", "Email", "Formula", "ForeignKey", "GeoData", "Geometry", "ID", "JSON", "LastModifiedTime", "LongText", "LinkToAnotherRecord", "Lookup", "MultiSelect", "Number", "Percent", "PhoneNumber", "Rating", "Rollup", "SingleLineText", "SingleSelect", "SpecificDBType", "Time", "URL", "Year", "QrCode", "Links", "User", "CreatedBy", "LastModifiedBy"]] = Field(None, alias='uidt')

    un: typing.Optional[ModelBool] = Field(None, alias='un')

    unique: typing.Optional[ModelBool] = Field(None, alias='unique')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
