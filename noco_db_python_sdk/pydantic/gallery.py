# coding: utf-8

"""
    NocoDB v2

    NocoDB API Documentation

    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from noco_db_python_sdk.pydantic.gallery_column import GalleryColumn
from noco_db_python_sdk.pydantic.model_bool import ModelBool
from noco_db_python_sdk.pydantic.string_or_null import StringOrNull

class Gallery(BaseModel):
    title: typing.Optional[str] = Field(None, alias='title')

    alias: typing.Optional[str] = Field(None, alias='alias')

    columns: typing.Optional[typing.List[GalleryColumn]] = Field(None, alias='columns')

    cover_image: typing.Optional[str] = Field(None, alias='cover_image')

    cover_image_idx: typing.Optional[int] = Field(None, alias='cover_image_idx')

    deleted: typing.Optional[ModelBool] = Field(None, alias='deleted')

    fk_cover_image_col_id: typing.Optional[StringOrNull] = Field(None, alias='fk_cover_image_col_id')

    # Foreign Key to Model
    fk_model_id: typing.Optional[str] = Field(None, alias='fk_model_id')

    # Foreign Key to View
    fk_view_id: typing.Optional[str] = Field(None, alias='fk_view_id')

    lock_type: typing.Optional[Literal["collaborative", "locked", "personal"]] = Field(None, alias='lock_type')

    next_enabled: typing.Optional[ModelBool] = Field(None, alias='next_enabled')

    # Order of Gallery
    order: typing.Optional[typing.Union[int, float]] = Field(None, alias='order')

    prev_enabled: typing.Optional[ModelBool] = Field(None, alias='prev_enabled')

    restrict_number: typing.Optional[str] = Field(None, alias='restrict_number')

    restrict_size: typing.Optional[str] = Field(None, alias='restrict_size')

    restrict_types: typing.Optional[str] = Field(None, alias='restrict_types')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
