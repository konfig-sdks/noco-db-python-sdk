# coding: utf-8

"""
    NocoDB v2

    NocoDB API Documentation

    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from noco_db_python_sdk.pydantic.map_column import MapColumn
from noco_db_python_sdk.pydantic.meta import Meta

class Map(BaseModel):
    # Title of Map View
    title: typing.Optional[str] = Field(None, alias='title')

    # The ID of the source that this view belongs to
    source_id: typing.Optional[str] = Field(None, alias='source_id')

    # Columns in this view
    columns: typing.Optional[typing.List[MapColumn]] = Field(None, alias='columns')

    # Foreign Key to GeoData Column
    fk_geo_data_col_id: typing.Optional[str] = Field(None, alias='fk_geo_data_col_id')

    # Unique ID for Map
    fk_view_id: typing.Optional[str] = Field(None, alias='fk_view_id')

    meta: typing.Optional[Meta] = Field(None, alias='meta')

    # The order of the map list
    order: typing.Optional[typing.Union[int, float]] = Field(None, alias='order')

    # The ID of the base that this view belongs to
    base_id: typing.Optional[str] = Field(None, alias='base_id')

    # To show this Map or not
    show: typing.Optional[bool] = Field(None, alias='show')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
