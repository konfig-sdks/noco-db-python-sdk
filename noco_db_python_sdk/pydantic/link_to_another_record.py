# coding: utf-8

"""
    NocoDB v2

    NocoDB API Documentation

    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from noco_db_python_sdk.pydantic.id import Id
from noco_db_python_sdk.pydantic.model_bool import ModelBool

class LinkToAnotherRecord(BaseModel):
    deleted: typing.Optional[str] = Field(None, alias='deleted')

    dr: typing.Optional[str] = Field(None, alias='dr')

    fk_child_column_id: typing.Optional[str] = Field(None, alias='fk_child_column_id')

    fk_column_id: typing.Optional[Id] = Field(None, alias='fk_column_id')

    fk_index_name: typing.Optional[str] = Field(None, alias='fk_index_name')

    fk_mm_child_column_id: typing.Optional[str] = Field(None, alias='fk_mm_child_column_id')

    fk_mm_model_id: typing.Optional[str] = Field(None, alias='fk_mm_model_id')

    fk_mm_parent_column_id: typing.Optional[str] = Field(None, alias='fk_mm_parent_column_id')

    fk_parent_column_id: typing.Optional[str] = Field(None, alias='fk_parent_column_id')

    fk_related_model_id: typing.Optional[str] = Field(None, alias='fk_related_model_id')

    id: typing.Optional[Id] = Field(None, alias='id')

    order: typing.Optional[str] = Field(None, alias='order')

    type: typing.Optional[str] = Field(None, alias='type')

    ur: typing.Optional[str] = Field(None, alias='ur')

    virtual: typing.Optional[ModelBool] = Field(None, alias='virtual')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
