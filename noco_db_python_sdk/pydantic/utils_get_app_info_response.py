# coding: utf-8

"""
    NocoDB v2

    NocoDB API Documentation

    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class UtilsGetAppInfoResponse(BaseModel):
    version: typing.Optional[str] = Field(None, alias='version')

    auth_type: typing.Optional[str] = Field(None, alias='authType')

    base_has_admin: typing.Optional[bool] = Field(None, alias='baseHasAdmin')

    first_user: typing.Optional[bool] = Field(None, alias='firstUser')

    type: typing.Optional[str] = Field(None, alias='type')

    google_auth_enabled: typing.Optional[bool] = Field(None, alias='googleAuthEnabled')

    github_auth_enabled: typing.Optional[bool] = Field(None, alias='githubAuthEnabled')

    one_click: typing.Optional[bool] = Field(None, alias='oneClick')

    connect_to_external_d_b: typing.Optional[bool] = Field(None, alias='connectToExternalDB')

    default_limit: typing.Optional[typing.Union[int, float]] = Field(None, alias='defaultLimit')

    nc_min: typing.Optional[bool] = Field(None, alias='ncMin')

    tele_enabled: typing.Optional[bool] = Field(None, alias='teleEnabled')

    audit_enabled: typing.Optional[bool] = Field(None, alias='auditEnabled')

    nc_site_url: typing.Optional[str] = Field(None, alias='ncSiteUrl')

    ee: typing.Optional[bool] = Field(None, alias='ee')

    nc_attachment_field_size: typing.Optional[typing.Union[int, float]] = Field(None, alias='ncAttachmentFieldSize')

    nc_max_attachments_allowed: typing.Optional[typing.Union[int, float]] = Field(None, alias='ncMaxAttachmentsAllowed')

    is_cloud: typing.Optional[bool] = Field(None, alias='isCloud')

    automation_log_level: typing.Optional[Literal["false", "ERROR", "ALL"]] = Field(None, alias='automationLogLevel')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
