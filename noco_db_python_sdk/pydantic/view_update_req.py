# coding: utf-8

"""
    NocoDB v2

    NocoDB API Documentation

    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from noco_db_python_sdk.pydantic.meta import Meta
from noco_db_python_sdk.pydantic.model_bool import ModelBool

class ViewUpdateReq(BaseModel):
    # View Title
    title: typing.Optional[str] = Field(None, alias='title')

    # View UUID. Used in Shared View.
    uuid: typing.Optional[str] = Field(None, alias='uuid')

    # View Password. Used in Shared View.
    password: typing.Optional[str] = Field(None, alias='password')

    # Lock type of View.
    lock_type: typing.Optional[Literal["collaborative", "locked", "personal"]] = Field(None, alias='lock_type')

    meta: typing.Optional[Meta] = Field(None, alias='meta')

    # The order of the list of views.
    order: typing.Optional[typing.Union[int, float]] = Field(None, alias='order')

    show_system_fields: typing.Optional[ModelBool] = Field(None, alias='show_system_fields')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
