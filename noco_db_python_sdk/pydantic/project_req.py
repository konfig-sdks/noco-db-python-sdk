# coding: utf-8

"""
    NocoDB v2

    NocoDB API Documentation

    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from noco_db_python_sdk.pydantic.base_req import BaseReq
from noco_db_python_sdk.pydantic.meta import Meta
from noco_db_python_sdk.pydantic.project_req_linked_db_project_ids import ProjectReqLinkedDbProjectIds
from noco_db_python_sdk.pydantic.string_or_null import StringOrNull

class ProjectReq(BaseModel):
    # Base Title
    title: str = Field(alias='title')

    # Base Description
    description: typing.Optional[str] = Field(None, alias='description')

    # Array of Bases
    sources: typing.Optional[typing.List[BaseReq]] = Field(None, alias='sources')

    # Primary Theme Color
    color: typing.Optional[str] = Field(None, alias='color')

    status: typing.Optional[StringOrNull] = Field(None, alias='status')

    type: typing.Optional[Literal["database", "documentation", "dashboard"]] = Field(None, alias='type')

    linked_db_project_ids: typing.Optional[ProjectReqLinkedDbProjectIds] = Field(None, alias='linked_db_project_ids')

    meta: typing.Optional[Meta] = Field(None, alias='meta')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
