# coding: utf-8

"""
    NocoDB v2

    NocoDB API Documentation

    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from noco_db_python_sdk.pydantic.table_records_read_by_id_response_attachment import TableRecordsReadByIdResponseAttachment
from noco_db_python_sdk.pydantic.table_records_read_by_id_response_json import TableRecordsReadByIdResponseJson
from noco_db_python_sdk.pydantic.table_records_read_by_id_response_linksbelongs_to import TableRecordsReadByIdResponseLinksbelongsTo

class TableRecordsReadByIdResponse(BaseModel):
    id: typing.Optional[typing.Union[int, float]] = Field(None, alias='Id')

    single_line_text: typing.Optional[str] = Field(None, alias='SingleLineText')

    created_at: typing.Optional[str] = Field(None, alias='CreatedAt')

    updated_at: typing.Optional[str] = Field(None, alias='UpdatedAt')

    year: typing.Optional[typing.Union[int, float]] = Field(None, alias='Year')

    u_r_l: typing.Optional[str] = Field(None, alias='URL')

    single_select: typing.Optional[str] = Field(None, alias='SingleSelect')

    email: typing.Optional[str] = Field(None, alias='Email')

    duration: typing.Optional[typing.Union[int, float]] = Field(None, alias='Duration')

    decimal: typing.Optional[typing.Union[int, float]] = Field(None, alias='Decimal')

    currency: typing.Optional[typing.Union[int, float]] = Field(None, alias='Currency')

    barcode: typing.Optional[str] = Field(None, alias='Barcode')

    j_s_o_n: typing.Optional[TableRecordsReadByIdResponseJson] = Field(None, alias='JSON')

    q_r_code: typing.Optional[str] = Field(None, alias='QRCode')

    rollup: typing.Optional[typing.Union[int, float]] = Field(None, alias='Rollup')

    date: typing.Optional[str] = Field(None, alias='Date')

    time: typing.Optional[str] = Field(None, alias='Time')

    rating: typing.Optional[typing.Union[int, float]] = Field(None, alias='Rating')

    percent: typing.Optional[typing.Union[int, float]] = Field(None, alias='Percent')

    formula: typing.Optional[typing.Union[int, float]] = Field(None, alias='Formula')

    checkbox: typing.Optional[bool] = Field(None, alias='Checkbox')

    attachment: typing.Optional[TableRecordsReadByIdResponseAttachment] = Field(None, alias='Attachment')

    multi_select: typing.Optional[str] = Field(None, alias='MultiSelect')

    date_time: typing.Optional[str] = Field(None, alias='DateTime')

    long_text: typing.Optional[str] = Field(None, alias='LongText')

    geometry: typing.Optional[str] = Field(None, alias='Geometry')

    phone_number: typing.Optional[str] = Field(None, alias='PhoneNumber')

    number: typing.Optional[typing.Union[int, float]] = Field(None, alias='Number')

    links:has-many_: typing.Optional[typing.Union[int, float]] = Field(None, alias='Links:has-many')

    links:many-many_: typing.Optional[typing.Union[int, float]] = Field(None, alias='Links:many-many')

    links:belongs-to_: typing.Optional[TableRecordsReadByIdResponseLinksbelongsTo] = Field(None, alias='Links:belongs-to')

    lookup: typing.Optional[str] = Field(None, alias='Lookup')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
