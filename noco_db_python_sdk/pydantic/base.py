# coding: utf-8

"""
    NocoDB v2

    NocoDB API Documentation

    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from noco_db_python_sdk.pydantic.meta import Meta
from noco_db_python_sdk.pydantic.model_bool import ModelBool
from noco_db_python_sdk.pydantic.source import Source

class Base(BaseModel):
    # Base Title
    title: typing.Optional[str] = Field(None, alias='title')

    # Base Description
    description: typing.Optional[str] = Field(None, alias='description')

    # List of source models
    sources: typing.Optional[typing.List[Source]] = Field(None, alias='sources')

    # Primary Theme Color
    color: typing.Optional[str] = Field(None, alias='color')

    deleted: typing.Optional[ModelBool] = Field(None, alias='deleted')

    # Unique Base ID
    id: typing.Optional[str] = Field(None, alias='id')

    is_meta: typing.Optional[ModelBool] = Field(None, alias='is_meta')

    meta: typing.Optional[Meta] = Field(None, alias='meta')

    # The order in base list
    order: typing.Optional[typing.Union[int, float]] = Field(None, alias='order')

    # Base prefix. Used in XCDB only.
    prefix: typing.Optional[str] = Field(None, alias='prefix')

    type: typing.Optional[Literal["database", "documentation", "dashboard"]] = Field(None, alias='type')

    # List of linked Database Projects that this base has access to (only used in Dashboard bases so far)
    linked_db_projects: typing.Optional['typing.List["Base"]'] = Field(None, alias='linked_db_projects')

    status: typing.Optional[str] = Field(None, alias='status')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
